@page "/users"
@inject IUserRepository userRepository

<Pagination CurrentPage="@paginationDTO.Page" SelectedPage="SelectedPage"
            TotalAmountPages="totalAmountOfPages" />

<h3>Users</h3>
<GenericList List="users">
    <WholeListTemplate>
        <table class="table">
            <thead>
                <tr>
                    <th></th>
                    <th>User</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var user in users)
                {
                    <tr>
                        <td>
                            <a href="/users/edit/@user.UserId" class="btn btn-success">Edit</a>
                        </td>
                        <td>
                            @user.Email
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </WholeListTemplate>
</GenericList>


@code {
    List<UserDTO> users;
    PaginationDTO paginationDTO = new PaginationDTO();
    int totalAmountOfPages;

    protected override async Task OnInitializedAsync()
    {
        await LoadUsers();
    }

    private async Task SelectedPage(int page)
    {
        Console.WriteLine(page);
        paginationDTO.Page = page;
        await LoadUsers();
    }

    private async Task LoadUsers()
    {
        var paginatedResponse = await userRepository.GetUsers(paginationDTO);
        users = paginatedResponse.Response;
        totalAmountOfPages = paginatedResponse.TotalAmountPages;
    }
}
